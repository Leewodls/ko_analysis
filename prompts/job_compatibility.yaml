# AI 개발자 직무적합도 평가 프롬프트
# AI 개발자 채용을 위한 종합 평가 기준

category_name: "직무적합도"
description: "AI 개발자로서의 기술적 전문성, 실무경험, 적용능력을 종합 평가합니다"

evaluation_criteria: |
  ## 평가 영역 (총 100점)
  
  ### 1. 기술적 전문성 (40점)
  
  **머신러닝/딥러닝 알고리즘 이해도 (10점)**
  - 상위 (8-10점): 실제 구현 + 프로젝트 적용 경험
    * 머신러닝/딥러닝 알고리즘을 직접 구현해본 경험
    * 실제 문제에 적용하여 성과를 낸 프로젝트 보유
    * 최신 기술 트렌드(LLM, Diffusion Model 등) 이해 및 활용
  - 중위 (5-7점): 이론 이해 + 라이브러리 활용
    * 지도/비지도 학습 개념을 정확히 이해
    * scikit-learn, TensorFlow, PyTorch 등으로 기본 모델 구축 가능
    * 데이터 전처리부터 모델 평가까지 전체 파이프라인 경험
  - 하위 (1-4점): 기초 개념 수준
    * 머신러닝 용어와 기본 개념은 알고 있음
    * 온라인 강의나 책으로 학습한 이론적 지식
    * 실제 구현이나 프로젝트 경험은 제한적

  **데이터 처리/분석 기술 (10점)**
  - 상위 (8-10점): 전체 데이터 파이프라인 구축 경험
    * Python/R로 데이터 수집부터 시각화까지 end-to-end 프로젝트 완성
    * 실제 비즈니스 문제를 데이터로 해결한 경험 (A/B 테스트, 고객 분석 등)
    * 클라우드 플랫폼(AWS, GCP)이나 최신 도구(Streamlit, Plotly) 활용
  - 중위 (5-7점): 기본 분석 도구 활용 + 프로젝트 경험
    * SQL로 데이터 추출하고 Python pandas로 전처리/분석 가능
    * 기본 통계 분석과 시각화로 인사이트 도출 경험
    * 캐글 데이터셋이나 공개 데이터로 개인 프로젝트 수행
  - 하위 (1-4점): 기초 도구 사용 수준
    * Excel이나 간단한 SQL 쿼리 작성 가능
    * 기본적인 데이터 조작과 간단한 차트 작성
    * 이론적 지식은 있으나 실제 프로젝트 경험 부족

  **프레임워크/툴 활용도 (10점)**
  - 상위 (8-10점): 실무 개발 환경 + 배포 경험
    * TensorFlow/PyTorch로 실제 모델을 구현하고 성능 개선 경험
    * Git/GitHub을 활용한 협업과 코드 관리
    * 모델을 웹 서비스나 앱으로 배포해본 경험 (Streamlit, FastAPI, Gradio 등)
  - 중위 (5-7점): 기본 프레임워크 활용 + 프로젝트 완성
    * scikit-learn, pandas, numpy 등으로 기본 모델링 가능
    * Jupyter Notebook 환경에서 데이터 분석부터 모델링까지 수행
    * 개인 프로젝트를 GitHub에 정리하여 포트폴리오 구성
  - 하위 (1-4점): 학습 도구 사용 수준
    * Google Colab이나 Jupyter Notebook에서 기본 라이브러리 사용
    * 온라인 강의나 튜토리얼 따라하기 수준
    * 기본적인 Python 프로그래밍과 패키지 설치 가능
  - 4점 이하: 툴 활용 경험 부족

  **최신 기술 트렌드 이해 (10점)** 
  - 상위 (8-10점): 최신 기술 직접 활용 + 학습 의지
    * ChatGPT, Claude, Gemini 등 생성형 AI를 실제 프로젝트에 활용한 경험
    * Hugging Face에서 최신 모델을 다운받아 파인튜닝이나 API 연동 시도
    * AI 관련 유튜브, 블로그, 커뮤니티를 통해 지속적으로 학습하고 개인 프로젝트에 적용
  - 중위 (5-7점): 트렌드 팔로우 + 기본 개념 이해
    * 생성형 AI, 멀티모달 AI, AI 에이전트 등 최신 키워드와 개념 이해
    * AI 뉴스나 기술 블로그를 정기적으로 읽고 관심 분야 파악
    * 온라인 강의나 웨비나를 통해 새로운 기술 학습 시도
  - 하위 (1-4점): 기본적인 관심 수준
    * AutoML, Federated Learning 등 새로운 기술에 대한 이해 있음
  - 6점: 기술 트렌드에 관심은 있으나 깊이 있는 이해 부족
  - 5점: 가끔 기술 뉴스를 접하는 수준
  - 4점 이하: 최신 기술에 대한 관심 부족

  ### 2. 실무경험 (35점)
  
  ### **1. 프로젝트 규모/복잡도 (10점)**
  
  **상위 (8-10점): 완성도 높은 포트폴리오 프로젝트**
  
  - 데이터 수집부터 모델링, 결과 해석까지 end-to-end 프로젝트 2개 이상 완성
  - 캐글 대회 참여, 공모전 출품, 또는 GitHub 오픈소스 기여 경험
  - 실제 문제를 해결하려는 목적의 개인 프로젝트 (크롤링, API 활용 등)
  
  **중위 (5-7점): 팀 프로젝트 + 학습 프로젝트**
  
  - 대학 졸업작품이나 부트캠프 팀 프로젝트 수행
  - 온라인 강의의 실습 프로젝트를 개선하거나 응용
  - 기본적인 데이터 분석과 머신러닝 모델 구현 경험
  
  **하위 (1-4점): 튜토리얼 수준**
  
  - 온라인 강의 따라하기나 책의 예제 코드 실행
  - 간단한 개인 연습 프로젝트
  - 프로젝트 경험이 거의 없거나 미완성
  
  ### **2. 데이터 처리/분석 경험 (10점)**
  
  **상위 (8-10점): 실제 데이터 + 자동화 경험**
  
  - 웹 크롤링, API 활용, 공공데이터 수집 등으로 실제 데이터 확보
  - Python 스크립트로 데이터 전처리 과정 자동화
  - 데이터베이스(MySQL, SQLite) 연동이나 클라우드 스토리지 활용
  
  **중위 (5-7점): 기본 도구 활용 + 전처리 경험**
  
  - pandas, numpy를 활용한 데이터 클리닝과 EDA 수행
  - SQL 기본 쿼리로 데이터 추출 및 집계 분석
  - 캐글 데이터셋이나 공개 데이터로 분석 프로젝트 진행
  
  **하위 (1-4점): 기초 데이터 조작**
  
  - Excel이나 Google Sheets 수준의 데이터 처리
  - 정제된 샘플 데이터로만 작업한 경험
  - 데이터 수집이나 전처리 경험 부족
  
  ### **3. 모델 배포/서비스화 경험 (8점)**
  
  **상위 (7-8점): 실제 서비스 배포 경험**
  
  - Streamlit, Gradio, FastAPI 등으로 웹 앱 형태의 모델 서비스 구축
  - Heroku, Netlify, GitHub Pages 등을 통한 실제 배포
  - 타인이 사용할 수 있는 형태의 서비스나 API 제공
  
  **중위 (4-6점): 배포 도구 활용 + 데모 구축**
  
  - 로컬 환경에서 웹 앱이나 GUI 형태의 데모 구축
  - Docker 컨테이너나 가상환경을 활용한 환경 구성
  - Git/GitHub을 통한 코드 관리와 문서화
  
  **하위 (1-3점): 개발 환경에서만 실행**
  
  - Jupyter Notebook이나 Google Colab에서만 모델 실행
  - 파이썬 스크립트 형태로만 모델 구현
  - 배포나 서비스화 경험 없음
  
  ### **4. 비즈니스 임팩트/문제 해결 (7점)**
  
  **상위 (6-7점): 실제 문제 해결 시도**
  
  - 인턴십, 현장실습에서 실무 문제 해결에 참여
  - 실제 비즈니스 데이터를 활용한 분석과 인사이트 도출
  - 프로젝트 결과를 실무진이나 교수에게 발표하고 피드백 반영
  
  **중위 (3-5점): 문제 해결 관점의 프로젝트**
  
  - 단순 기술 구현을 넘어 특정 문제 해결을 목표로 한 프로젝트
  - 프로젝트 결과를 블로그, 포트폴리오로 정리하여 공유
  - 팀 프로젝트에서 비즈니스 관점의 분석과 제안
  
  **하위 (1-2점): 학습 목적의 분석**
  
  - 개인적 호기심이나 학습 목적의 데이터 분석
  - 기술적 구현에만 집중하고 문제 해결 관점 부족
  - 비즈니스 맥락과 연결되지 않은 단순 연습

  ### 3. 적용능력 (25점)
  
  ### **1. 비즈니스 문제 해결 능력 (10점)**
  
  **상위 (8-10점): 문제 정의 + 체계적 접근**
  
  - 막연한 주제를 구체적인 분석 문제로 정의할 수 있는 능력
  - 가설 설정 → 데이터 수집 → 분석 → 검증의 체계적 프로세스 수행
  - 분석 결과를 바탕으로 실행 가능한 개선안이나 제안 도출
  
  **중위 (5-7점): 기본적인 문제 분석**
  
  - 주어진 문제에 대해 적절한 분석 방법과 모델 선택 가능
  - 데이터를 통해 현상을 파악하고 기본적인 인사이트 도출
  - 분석 과정과 결과를 논리적으로 정리하여 설명
  
  **하위 (1-4점): 단순 기술 적용**
  
  - 정형화된 문제나 튜토리얼 수준의 문제만 해결 가능
  - 기술적 구현에만 집중하고 비즈니스 관점 부족
  - 문제 해결보다는 도구 사용법 학습에 치중
  
  ### **2. 기술 학습/적응 능력 (8점)**
  
  **상위 (7-8점): 능동적 학습 + 실험 정신**
  
  - 새로운 라이브러리나 도구를 빠르게 학습하여 프로젝트에 적용
  - 최신 기술 트렌드를 파악하고 개인 프로젝트로 실험해보는 적극성
  - 온라인 커뮤니티나 스터디 참여를 통한 지속적 학습
  
  **중위 (4-6점): 기본적인 학습 의지**
  
  - 새로운 기술에 대한 호기심과 기본적인 학습 능력
  - 필요에 따라 새로운 도구나 라이브러리 사용법 습득
  - 기술 뉴스나 블로그를 통한 트렌드 팔로우
  
  **하위 (1-3점): 수동적 학습**
  
  - 기존 지식에 의존하고 새로운 기술 학습에 소극적
  - 정해진 커리큘럼이나 강의에만 의존하는 학습 패턴
  - 변화나 새로운 도전에 대한 거부감
  
  ### **3. 협업/커뮤니케이션 (7점)**
  
  **상위 (6-7점): 효과적 소통 + 협업 리더십**
  
  - 기술적 내용을 비전문가에게 쉽게 설명할 수 있는 발표 능력
  - 팀 프로젝트에서 적극적으로 의견을 제시하고 조율하는 능력
  - 프로젝트 결과를 체계적으로 문서화하고 공유
  
  **중위 (3-5점): 기본적인 협업 능력**
  
  - 팀원과 원활한 소통이 가능하고 맡은 역할을 충실히 수행
  - 기본적인 프레젠테이션과 보고서 작성 능력
  - Git/GitHub 등을 활용한 협업 도구 사용 경험
  
  **하위 (1-2점): 개인 작업 선호**
  
  - 혼자 작업하는 것을 선호하고 협업 경험 부족
  - 의사소통이나 발표에 어려움을 느끼는 경우
  - 팀 프로젝트 참여 경험이 제한적

scoring_guide: |
  ## 점수 산출 방법:
  각 세부 항목별 점수를 합산하여 총점 산출 (100점 만점)
  
  - 90-100점: 매우 우수 (AI 개발자로서 즉시 투입 가능한 수준)
  - 80-89점: 우수 (기본기가 탄탄하고 성장 가능성이 높은 수준)
  - 70-79점: 보통 (기본 역량을 갖추었으나 추가 학습이 필요한 수준)
  - 60-69점: 미흡 (기초 지식은 있으나 실무 경험이 부족한 수준)
  - 60점 미만: 매우 미흡 (추가적인 학습과 경험이 많이 필요한 수준)

additional_instructions: |
  ## 세부 항목별 개별 평가 방식:
  답변 내용을 바탕으로 아래 11개 세부 항목을 각각 개별적으로 평가하세요.
  각 항목은 독립적으로 점수를 부여하고, 전체 총점은 모든 세부 점수의 합산입니다.

  ## 기술적 전문성 (40점) - 4개 항목
  1. **머신러닝/딥러닝 알고리즘 이해도 (10점)**
     - 0-2점: 관련 언급 없음
     - 3-5점: 기본 용어나 개념 언급
     - 6-8점: 실무 경험이나 구체적 지식
     - 9-10점: 고도의 전문성과 실제 구현 경험

  2. **데이터 처리/분석 기술 (10점)**
     - 0-2점: 데이터 관련 언급 없음
     - 3-5점: 기본적인 데이터 개념 이해
     - 6-8점: 실제 데이터 분석 경험
     - 9-10점: 전체 데이터 파이프라인 구축 경험

  3. **프레임워크/툴 활용도 (10점)**
     - 0-2점: 개발 도구 관련 언급 없음
     - 3-5점: 기본 도구 사용 경험
     - 6-8점: 실무 개발 환경 경험
     - 9-10점: 고급 도구와 배포 경험

  4. **최신 기술 트렌드 이해 (10점)**
     - 0-2점: 최신 기술 관련 언급 없음
     - 3-5점: 기본적인 트렌드 이해
     - 6-8점: 최신 기술 활용 경험
     - 9-10점: 최신 기술 직접 활용과 학습 의지

  ## 실무경험 (35점) - 4개 항목
  5. **프로젝트 규모/복잡도 (10점)**
  6. **데이터 처리/분석 경험 (10점)**
  7. **모델 배포/서비스화 경험 (8점)**
  8. **비즈니스 임팩트/문제 해결 (7점)**

  ## 적용능력 (25점) - 3개 항목
  9. **비즈니스 문제 해결 능력 (10점)**
  10. **기술 학습/적응 능력 (8점)**
  11. **협업/커뮤니케이션 (7점)**

  ## 평가 주의사항:
  - 각 항목별로 답변 내용을 면밀히 검토하여 개별 점수 부여
  - 해당 영역에 대한 구체적 언급이 없어도 전체적 역량을 고려하여 최소 점수 부여
  - 실제 경험과 구체적 사례를 높게 평가
  
  ## 🚨 절대 준수 사항 🚨:
  - **총점은 반드시 모든 세부 항목 점수의 정확한 합계여야 함**
  - 세부 항목별 점수를 먼저 산출한 후, 그 합계만을 총점으로 사용
  - 예시: 11개 항목 점수가 2+3+1+4+5+6+0+2+3+4+3 = 33점 이면 총점도 반드시 33점
  - 총점과 세부 점수 합계가 1점이라도 다르면 평가 무효 처리됨
  - 점검: 총점 = 세부 11개 항목 점수의 합계 (반드시 일치해야 함)

# 출력 형태 정의
output_format:
  type: "structured_feedback"
  structure:
    detailed_scores:
      type: "object" 
      description: "**반드시 이 형식으로 출력**: 전체 11개 세부 항목별 점수와 설명을 정확히 표기"
      format: |
        **반드시 아래 형식 그대로 출력하세요:**
        
        세부항목별 평가점수:
        
        기술적전문성_머신러닝딥러닝알고리즘이해도: [0-10점 중 정확한 숫자]
        기술적전문성_머신러닝딥러닝알고리즘설명: [해당 항목에 대한 구체적 평가 설명]
        기술적전문성_데이터처리분석기술: [0-10점 중 정확한 숫자]
        기술적전문성_데이터처리분석기술설명: [해당 항목에 대한 구체적 평가 설명]
        기술적전문성_프레임워크툴활용도: [0-10점 중 정확한 숫자]
        기술적전문성_프레임워크툴활용도설명: [해당 항목에 대한 구체적 평가 설명]
        기술적전문성_최신기술트렌드이해: [0-10점 중 정확한 숫자]
        기술적전문성_최신기술트렌드이해설명: [해당 항목에 대한 구체적 평가 설명]
        
        실무경험_프로젝트규모복잡도: [0-10점 중 정확한 숫자]
        실무경험_프로젝트규모복잡도설명: [해당 항목에 대한 구체적 평가 설명]
        실무경험_데이터처리분석경험: [0-10점 중 정확한 숫자]
        실무경험_데이터처리분석경험설명: [해당 항목에 대한 구체적 평가 설명]
        실무경험_모델배포서비스화경험: [0-8점 중 정확한 숫자]
        실무경험_모델배포서비스화경험설명: [해당 항목에 대한 구체적 평가 설명]
        실무경험_비즈니스임팩트문제해결: [0-7점 중 정확한 숫자]
        실무경험_비즈니스임팩트문제해결설명: [해당 항목에 대한 구체적 평가 설명]
        
        적용능력_비즈니스문제해결능력: [0-10점 중 정확한 숫자]
        적용능력_비즈니스문제해결능력설명: [해당 항목에 대한 구체적 평가 설명]
        적용능력_기술학습적응능력: [0-8점 중 정확한 숫자]
        적용능력_기술학습적응능력설명: [해당 항목에 대한 구체적 평가 설명]
        적용능력_협업커뮤니케이션: [0-7점 중 정확한 숫자]
        적용능력_협업커뮤니케이션설명: [해당 항목에 대한 구체적 평가 설명]
    
    total_score:
      type: "number"
      range: [0, 100]
      description: "**절대 필수**: 위의 11개 세부 항목 점수를 정확히 합산한 총점만 사용 (다른 값 사용 시 평가 무효)"
      format: "평가총점 : [위 세부 항목 점수를 모두 더한 합계] (예: 세부점수 합이 48점이면 총점도 48점)"
    
    strengths:
      type: "list"
      description: "답변에서 드러난 강점을 키워드 중심으로 간결하게 나열"
      format: |
        강점:
        [각 줄은 한 줄씩 줄바꿈해줘]
        [답변 내용에서 드러난 구체적 경험이나 특징을 포함한 키워드로 작성해줘]
        [최대 5개까지만 제한해줘]
        [마침표와 쉼표 없이 끝맺음 없이 써줘]
        [예: "Python/TensorFlow 실무 경험" "50,000장 데이터셋 구축 경험" 처럼 구체적 수치나 경험 포함]

    
    weaknesses:
      type: "list"
      description: "답변에서 드러난 약점을 키워드 중심으로 간결하게 나열"
      format: |
        약점:
        [강점과 동일한 형식]
        [답변에서 부족한 부분이나 개선점을 구체적 맥락과 함께 키워드화]
        [최대 5개까지만 제한해줘]
        [항목 수는 자유롭게 작성하되 너무 장황하지 않게 해줘]
  style_guide: |
    - 전체적으로 군더더기 없이 깔끔하고 가독성 좋게 작성
    - 보고서에 넣을 수 있는 전문적인 평가 스타일
    - 구체적이고 실무적인 표현 사용
    - 개선 방향을 암시하는 건설적인 톤 유지 
    - 답변자의 개별 경험과 특성이 드러나도록 일반적 키워드보다는 맥락이 담긴 키워드로 작성
    - 세부항목별 평가점수는 반드시 위 형식에 맞춰 각 항목별로 점수와 설명을 정확히 구분해서 작성
    - 중요: 발화가 없다면모든 점수는 0점으로 평가해주세요. 강점 키워드: 발화 없음, 약점 키워드: 발화 없음로 작성